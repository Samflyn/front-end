# version: "3"

# services:
#     drupal:
#         image: drupal
#         ports:
#             - "8080:80"
#         volumes:
#             - drupal-modules:/var/www/html/modules
#             - drupal-profiles:/var/www/html/profiles
#             - drupal-themes:/var/www/html/themes
#             - drupal-sites:/var/www/html/sites

#     postgres:
#         image: postgres
#         environment: 
#             - POSTGRES_PASSWORD=postgres

# volumes:
#     drupal-modules:
#     drupal-profiles:
#     drupal-themes:
#     drupal-sites:



# docker-compose can be used to build the image and use it

# version: "3"

# services: 
#     proxy:
#         build:
#             context: .
#             dockerfile: nginx.Dockerfile
#         image: nginx
#         ports: 
#             - "80:80"
#     web:
#         image: httpd
#         volumes: .:/user/local/apache2/htdocs



# WITH DOCKERFILE
# if image name is not specified it will be autogenerated based on the dir name

# version: "3"

# services:
#     drupal:
#         build: .
#         image: custom-drupal
#         ports:
#             - "8080:80"
#         volumes:
#             - drupal-modules:/var/www/html/modules
#             - drupal-profiles:/var/www/html/profiles
#             - drupal-themes:/var/www/html/themes
#             - drupal-sites:/var/www/html/sites

#     postgres:
#         image: postgres
#         environment: 
#             - POSTGRES_PASSWORD=postgres
#         volumes: 
#             - drupal-data:/var/lib/postgresql/data

# volumes:
#     drupal-modules:
#     drupal-profiles:
#     drupal-themes:
#     drupal-sites:
#     drupal-data:



# secrets with stacks

version: "3.1"

services: 
  psql:
    image: postgresql
    secrets:
      - psql_user
      - psql_password
    environment: 
      POSTGRES_PASSWORD_FILE: /run/secrets/psql_password
      POSTGRES_USER_FILE: /run/secrets/psql_user

secrets:
  psql_user:
    file: ./psql_user.txt
  psql_password:
    file: ./psql_password.txt